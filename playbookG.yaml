- name: "Install Base"
  hosts: all
  become: true
  
  vars:
   firewall_allowed_tcp_ports:
    - "22"
    - "8081"
    - "443"
    - "9999"
    - "80"
    - "3000"

   jenkins_http_port: 9999
   jenkins_plugins:
    - git
    - gitlab-plugin
    - github
    - pipeline-model-definition
    - uno-choice
    - slack
    - extensible-choice-parameter
    - pipeline-stage-step
    - delivery-pipeline-plugin
    - pipeline-stage-view
    
   #gitlab_external_url: "http://192.168.86.86/"
   #gitlab_redirect_http_to_https: "false"
   #gitlab_omniauth_block_auto_create_users: "false"

   pip_install_packages:
      - name: docker

  roles:
    - geerlingguy.repo-epel
    - geerlingguy.firewall    
    - geerlingguy.java
    - geerlingguy.jenkins
    - geerlingguy.git
    #- geerlingguy.gitlab
    - geerlingguy.pip
    - geerlingguy.docker
    #- jxn.python-gitlab-modules

  tasks:

    - name: "Copy Jenkins jobs into place."
      copy:
        src: "jenkins-configs/jobs"
        dest: "/var/lib/jenkins"
      notify: "restart jenkins"
      become: true
      become_user: jenkins
      tags: ['jenkins']

#    - name: "Add Insecure register"
#      become: true
#      copy:
#        content: '{"insecure-registries" : ["192.168.86.86:8081"]}'
#        dest: "/etc/docker/daemon.json"
#        mode: 777


- name: "Install ansible"
  hosts: all

  roles:
    - geerlingguy.ansible


- name: "Create SSL directory"
  hosts: all
  become: true
  
  tasks:
    - file:
        path: /etc/certificates
        state: directory
        mode: "0755"
 
    - name: "Copy Apache certificate"
      become: true
      copy:
        src: "example.crt"
        dest: "/etc/certificates/example.crt"
        mode: "0400"

    - name: "Copy Apache key"
      become: true
      copy:
          src: "example.key"
          dest: "/etc/certificates/example.key"
          mode: "0400"

- name: "Install nexus"
  hosts: all
  become: true
  
  #vars:
    #nexus_version: '3.7.1-02'
    #httpd_server_name: 'nexus.vm'
    #httpd_setup_enable: true
    #httpd_ssl_certificate_file: "/etc/certificates/example.crt"
    #httpd_ssl_certificate_key_file: "/etc/certificates/example.key"
  
  roles:
    #- geerlingguy.apache    
    - savoirfairelinux.nexus3-oss

#- name: "Mirror a Git repository with Ansible"
#  hosts: all
#  become: true
#  vars:
#    git_dir: /tmp/timeoff-management-application.git
#    gitlab_disable_signup: true

  tasks:

  - name: "Install a list of packages"
    yum:
      name:
        - python-virtualenv
        - expect
        - python2-jenkins
      state: present
    become: true

  - name: "Restart Jenkins"
    systemd:
      state: started
      name: jenkins
      enabled: yes
      daemon_reload: yes

  - name: "Add Jenkins User to docker Group"
    become: true
    shell: 'groupadd docker; usermod -a -G docker jenkins; chmod 777 /var/run/docker.sock'

#  - name: "Clone the Git repo"
#    git:
#       repo: 'https://github.com/nat55555/timeoff-management-application.git'
#       dest: '{{ git_dir }}'
#       clone: yes
#       update: yes

# - name: "Create GitLab User"
#   #become: true
#   gitlab_user:
#     api_url: http://192.168.86.86:80
#     validate_certs: False
#     api_username: root
#     api_password: "5iveL!fe"
#     name: Gitlab-Admin
#     username: root
#     password: toortoortoot
#     email: gitlabadmin@example.com
      #sshkey_name: MySSH
      #sshkey_file: ssh-rsa AAAAB3NzaC1yc...
#     state: present
#     group: super_group/mon_group
#     access_level: owner
    #delegate_to: localhost

#  - name: "configuring external url"
#    become: true
#    lineinfile: 'dest=/etc/gitlab/gitlab.rb line="{{ item }}"'
#    with_items:
#      - "gitlab_rails['initial_root_password'] = 'toortoortoor'"
#      - "gitlab_rails['password_authentication_enabled'] = false"
#      - "nginx['redirect_http_to_https'] = false"

#  - name: "disabling signup"
#    become: true
#    shell: expect -c 'spawn gitlab-rails console production;
#                      expect "%s";
#                      send "x = ApplicationSetting.first\r";
#                      expect "%s";
#                      send "x.signup_enabled = false\r";
#                      expect "%s";
#                      send "x.save!\r";
#                      expect "%s";
#                      send "^D"'
#    when: gitlab_disable_signup

#  - name: "configuring gitlab"
#    become: true
#    shell: 'gitlab-ctl reconfigure'

#  - name: "Add alternate remote"
#    ini_file: dest={{ git_dir }}/.git/config section='remote \"mirrored\"' option=url value='http://192.168.86.86:example/timeoff-management-application.git'
#    tags: configuration

 
# - name: "Gitlab create project"
#   become: true
#   gitlab_project:
#   server_url: http://192.168.86.86
#     validate_certs: False
#     login_user: root
#     login_password: 5iveL!fe
#     name: example
#     group: ansible
#     issues_enabled: False
#     wiki_enabled: True
#     snippets_enabled: True
#     import_url: http://192.168.86.86/example/timeoff-management-application.git
#     state: present
#    delegate_to: localhost
 
# - name: "Push the repo to alternate remote"
#   #shell: 'git push https://root:5iveL!fe@'
#   #shell: 'git --git-dir={{ git_dir }}/.git push --set-upstream http://192.168.86.86/example&timeoff-management-application.git'
#   shell: 'cd {{ git_dir }}; git push --set-upstream http://192.168.86.86/example/timeoff-management-application.git'
